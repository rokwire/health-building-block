// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/access-rules": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the access rules",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetAccessRules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccessRule"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates an access rule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateAccessRule",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createAccessRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessRule"
                        }
                    }
                }
            }
        },
        "/admin/access-rules/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates an access rule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateAccessRule",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateAccessRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AccessRule"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes an access rule",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteAccessRule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/actions": {
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates an action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateAction",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CTest"
                        }
                    }
                }
            }
        },
        "/admin/app-versions": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the supported app versions",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetAppVersions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/audit": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the audilt/log history",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetAudit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User identifier",
                        "name": "user-identifier",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Entity",
                        "name": "entity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "entity-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operation",
                        "name": "operation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created At",
                        "name": "created-at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort By",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ascending",
                        "name": "asc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AuditEntity"
                            }
                        }
                    }
                }
            }
        },
        "/admin/counties": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the counties list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getCounties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ACounty"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a county",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateCounty",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createCountyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ACounty"
                        }
                    }
                }
            }
        },
        "/admin/counties/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a county",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateCounty",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateCountyRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ACounty"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a county",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteCounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/county-statuses": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gets all county statuses for a county.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getCountyStatusesByCountyID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "county-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CountyStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a county status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateCountyStatus",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createCountyStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CountyStatus"
                        }
                    }
                }
            }
        },
        "/admin/county-statuses/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a county status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateCountyStatus",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateCountyStatusRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CountyStatus"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a county status",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteCountyStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/crules": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the rules",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetCRules",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "county-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "App version",
                        "name": "app-version",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates the rules.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateCRules",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateCRulesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/faq": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives FAQs list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getFAQs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FAQ"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a faq item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "createFAQItem",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createFAQRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/faq/section/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a faq section.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateFAQSection",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateFAQSection"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a faq section",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteFAQSection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/faq/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a faq item.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateFAQItem",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateFAQRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a faq item",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteFAQItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted FAQ item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/guidelines": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gets all guidelines for a county",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getGuidelinesByCountyID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "county-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Guideline"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a guideline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateGuideline",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createGuidelineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Guideline"
                        }
                    }
                }
            }
        },
        "/admin/guidelines/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a guideline.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateGuideline",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateGuidelineRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Guideline"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a guideline.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteGuideline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/locations": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the locations list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getLocations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a location.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateLocation",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                }
            }
        },
        "/admin/locations/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a location.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateLocation",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateLocationRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a location",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteLocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/manual-tests": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the manual tests for a county",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getManualTestsByCountyID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ManualTest"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/manual-tests/{id}/image": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the image for a manual test",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getManualTestImage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manual Test ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ManualTestImage"
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/manual-tests/{id}/process": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Processes manual test.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "ProcessManualTest",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/processManualTestRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/news": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives news.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetNews",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/News"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateNews",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createNewsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                }
            }
        },
        "/admin/news/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates news.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateNews",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateNewsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes news",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteNews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted new items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/providers": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the providers list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Provider"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "createProvider",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    }
                }
            }
        },
        "/admin/providers/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a provider.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateProvider",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateProviderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a provider",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteProvider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/resources": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the resources.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getResources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "createResources",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                }
            }
        },
        "/admin/resources/display-order": {
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates the display order for all resources.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "updateDisplaOrderResources",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateDisplayOrderResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated resource items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/resources/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateResource",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateResourceRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a resource.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteResource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted resource item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/rules": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the rules list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getRules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ARule"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a rule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateRule",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ARule"
                        }
                    }
                }
            }
        },
        "/admin/rules/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a rule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateRule",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ARule"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a rule",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteRule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/symptom-groups": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the symptom groups",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getSymptomGroups",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SymptomGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/symptom-rules": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the symptom rules",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getSymptomRules",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SymptomRule"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a symptom rule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateSymptomRule",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createSymptomRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SymptomRule"
                        }
                    }
                }
            }
        },
        "/admin/symptom-rules/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a symptom rule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateSymptomRule",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateSymptomRuleRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SymptomRule"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a symptom rule.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteSymptomRule",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/symptoms": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the symptoms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetASymptoms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App version",
                        "name": "app-version",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates the symptoms.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateASymptoms",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateSymptomsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a symptom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateSymptom",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createSymptomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Symptom"
                        }
                    }
                }
            }
        },
        "/admin/symptoms/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a symptom.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateSymptom",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateSymptomRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Symptom"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a symptom",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteSymptom",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/test-type-results": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gets all test type results for a test type.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getTestTypeResultsByTestTypeID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Test Type ID",
                        "name": "test-type-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TestTypeResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a test type result for a specific test type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateTestTypeResult",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createTestTypeResultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TestTypeResult"
                        }
                    }
                }
            }
        },
        "/admin/test-type-results/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates test type result.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateTestTypeResult",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateTestTypeResultRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TestTypeResult"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a test type result",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteTestTypeResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/test-types": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives the test types",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "getTestTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ATestType"
                            }
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates a test type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "createTestType",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createTestTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ATestType"
                        }
                    }
                }
            }
        },
        "/admin/test-types/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates a test type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateTestType",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateTestTypeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ATestType"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes a test type",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "deleteTestType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/uin-overrides": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gives uin override items",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetUINOverrides",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UIN",
                        "name": "uin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by uin or category",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UINOverride"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Creates an uin override.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "CreateUINOverride",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createUINOverrideRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UINOverride"
                        }
                    }
                }
            }
        },
        "/admin/uin-overrides/uin/{uin}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Updates uin override.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "UpdateUINOverride",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUINOverrideRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "UIN",
                        "name": "uin",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Deletes an uin override",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "DeleteUINOverride",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UIN",
                        "name": "uin",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfuly deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    },
                    {
                        "AdminGroupAuth": []
                    }
                ],
                "description": "Gets the user by external id.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "GetUserByExternalID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "External ID",
                        "name": "external-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/access-rules/county/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the access rule for a county.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetAccessRuleByCounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TODO",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/building-access": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "grant/deny building access",
                "tags": [
                    "Covid19"
                ],
                "operationId": "SetUINBuildingAccess",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/setBuildingAccessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/counties": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the counties. Optionally you can filter the results by one or many of the following three fields - name, state_province and country",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetCounties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State province",
                        "name": "state_province",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country",
                        "name": "country",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/County"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/counties/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gets a county",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getCounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/County"
                        }
                    }
                }
            }
        },
        "/covid19/crules/county/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the rules for a county.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetCRulesByCounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/ctests": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets not processed ctests for a user.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getCTests",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "select false value",
                        "name": "processed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CTest"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ProvidersAuth": []
                    }
                ],
                "description": "Creates CTest.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "operationId": "createCTest",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createCTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes all ctests for a user",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "deleteCTests",
                "responses": {
                    "200": {
                        "description": "Successfuly deleted [n] items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/ctests/{id}": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Mark ctest as processed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "updateCTest",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateCTestRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CTest"
                        }
                    }
                }
            }
        },
        "/covid19/ext/building-access": {
            "get": {
                "security": [
                    {
                        "ProvidersAuth": []
                    }
                ],
                "description": "Gives the building access for the provided UIN",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "operationId": "GetExtBuildingAccess",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UIN",
                        "name": "uin",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UINBuildingAccess"
                        }
                    }
                }
            }
        },
        "/covid19/faq": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the covid19 FAQs. The sections are sorted by the display order field. The questions within a section are sorted by the display order field.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getFAQ",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FAQ"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/locations": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gets locations for county and provider - pass county-id and provider-id params. Get locations for county - pass county-id param.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetLocations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "county-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "provider-id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/locations/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gets a location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getLocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                }
            }
        },
        "/covid19/login": {
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Creates a user, updates it if already created",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "loginUser",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created or Successfully updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Authentication error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/news": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the covid19 news.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetNews",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/News"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/providers": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives all the providers",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Provider"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/providers/county/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the providers which have locations in a specific county",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getProvidersByCounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Provider"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/resources": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the covid19 resources",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getResources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resource"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/rules/county/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gets the rules for a county",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetRulesByCounty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Rule"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/symptom-groups": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the symptom groups",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getSymptomGroups",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SymptomGroup"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/symptom-rules/county/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the symptom rule for a county.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getSymptomRuleByCounty",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "County ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SymptomRule"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/symptoms": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the symptoms",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetSymptoms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/test-types": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gets test types. You can filter by id. The ids have to be comma separated.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetTestTypes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Test Type IDs",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TestType"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/trace/exposures": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Gives the exposures records. \"timestamp\" and \"date-added\" params are optional. It is the time in milliseconds.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetExposures",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "timestamp",
                        "name": "timestamp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "date-added",
                        "name": "date-added",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TraceExposure"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/trace/report": {
            "post": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Adds contact tracing report. \"timestamp\" - Unix time, the number of milliseconds elapsed since January 1, 1970 UTC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "AddTraceReport",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addTraceReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added [n] items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/track/items": {
            "get": {
                "security": [
                    {
                        "ProvidersAuth": []
                    }
                ],
                "description": "Gives the items list for the provided UINs. The list must be comma separated. The response looks like {\"”777778\":[{\"order_number\":null,\"date_created\":\"2020-08-12T05:52:47.467Z”},…],”777777\":[{\"order_number\":\"9\",\"date_created\":\"2020-09-10T05:02:14.716Z\"}]}",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "operationId": "GetItemsListsByUINs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma separated - uin1,uin2",
                        "name": "uins",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ilbuResponse"
                        }
                    }
                }
            }
        },
        "/covid19/track/uins": {
            "get": {
                "security": [
                    {
                        "ProvidersAuth": []
                    }
                ],
                "description": "Gives the corresponding UINs for the provided order numbers list. The list must be comma separated. The response looks like {\"ordernumber1\":\"uin 1\",\"ordernumber2\":\"uin 2\"}",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "operationId": "GetUINsByOrderNumbers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma separated - ordernumber1,ordernumber2",
                        "name": "order-numbers",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gubonResponse"
                        }
                    }
                }
            }
        },
        "/covid19/uin-override": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the uin override for the user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetUINOverride",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UINOverride"
                        }
                    }
                }
            }
        },
        "/covid19/user": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gives the current user.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/covid19/user/clear": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Clears everything for that user as if the user has never seen the service before.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "clearUserData",
                "responses": {
                    "200": {
                        "description": "Successfully cleared",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/users/re-post": {
            "get": {
                "security": [
                    {
                        "ProvidersAuth": []
                    }
                ],
                "description": "Gives the users for re-posting the test results",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "operationId": "GetUsersForRePost",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PUser"
                            }
                        }
                    }
                }
            }
        },
        "/covid19/users/uin/{id}": {
            "get": {
                "security": [
                    {
                        "ProvidersAuth": []
                    }
                ],
                "description": "Gives the user info needed for the providers",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Providers"
                ],
                "operationId": "getUserByShibbolethUIN",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetUserByShibbolethUINResponse"
                        }
                    }
                }
            }
        },
        "/covid19/v2/app-version/{app-version}/statuses": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets the status for the current user for a specific app version",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetStatusV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App version",
                        "name": "app-version",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates the status for the user for a specific app version. it creates it if not already created.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "CreateOrUpdateStatusV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App version",
                        "name": "app-version",
                        "in": "path"
                    },
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createOrUpdateStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes the status for the user for a specific app version.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "DeleteStatusV2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App version",
                        "name": "app-version",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/v2/histories": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets all histories for the current user user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "getHistoriesV2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/History"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "\"date\", \"type\", \"encrypted_key\" and \"encrypted_blob\" are mandatory fields. When the type is \"unverified_manual_test\" then the client must pass also \"encrypted_image_key\", \"encrypted_image_blob\" and (\"location_id\" or \"county_id\").",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "createHistoryV2",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/History"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes the history items for an user.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "deleteHistoriesV2",
                "responses": {
                    "200": {
                        "description": "Successfully deleted [n] items",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/covid19/v2/histories/{id}": {
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "\"date\", \"encrypted_key\" and \"encrypted_blob\" are optional. If a field is omitted then it will not be updated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "updateHistoryV2",
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateHistoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/History"
                        }
                    }
                }
            }
        },
        "/covid19/v2/statuses": {
            "get": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Gets the status for the current user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "GetStatusV2Deprecated",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Updates the status for the user. it creates it if not already created.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "CreateOrUpdateStatusV2Deprecated",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createOrUpdateStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AppUserAuth": []
                    }
                ],
                "description": "Deletes the status for the user.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Covid19"
                ],
                "operationId": "DeleteStatusV2Deprecated",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Gives the service version.",
                "produces": [
                    "text/plain"
                ],
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ACounty": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state_province": {
                    "type": "string"
                }
            }
        },
        "ARule": {
            "type": "object",
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "results_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ATestTypeResultCountyStatus"
                    }
                },
                "test_type_id": {
                    "type": "string"
                }
            }
        },
        "ATestType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "ATestTypeResultCountyStatus": {
            "type": "object",
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "test_type_result_id": {
                    "type": "string"
                }
            }
        },
        "AccessRule": {
            "type": "object",
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccessRuleCountyStatus"
                    }
                }
            }
        },
        "AccessRuleCountyStatus": {
            "type": "object",
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "AuditEntity": {
            "type": "object",
            "properties": {
                "client_data": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "entity": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "operation": {
                    "type": "string"
                },
                "used_group": {
                    "type": "string"
                },
                "user_identifier": {
                    "type": "string"
                },
                "user_info": {
                    "type": "string"
                }
            }
        },
        "CTest": {
            "type": "object",
            "properties": {
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "processed": {
                    "type": "boolean"
                },
                "provider_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "County": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "county_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CountyStatus"
                    }
                },
                "guidelines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Guideline"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state_province": {
                    "type": "string"
                }
            }
        },
        "CountyStatus": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FAQ": {
            "type": "object",
            "properties": {
                "dateUpdated": {
                    "type": "string"
                },
                "general": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FAQGeneral"
                    }
                },
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FAQSection"
                    }
                }
            }
        },
        "FAQGeneral": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "FAQQuestion": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "FAQSection": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FAQQuestion"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "GetUserByShibbolethUINResponse": {
            "type": "object",
            "properties": {
                "consent": {
                    "type": "boolean"
                },
                "public_key": {
                    "type": "string"
                }
            }
        },
        "Guideline": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidelineItem"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "GuidelineItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "History": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "address_1": {
                    "type": "string"
                },
                "address_2": {
                    "type": "string"
                },
                "available_tests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "county_id": {
                    "type": "string"
                },
                "days_of_operation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OperationDay"
                    }
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "wait_time_color": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "ManualTest": {
            "type": "object",
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "history_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/User"
                }
            }
        },
        "ManualTestImage": {
            "type": "object",
            "properties": {
                "encrypted_image_blob": {
                    "type": "string"
                },
                "encrypted_image_key": {
                    "type": "string"
                }
            }
        },
        "News": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "htmlContent": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "OperationDay": {
            "type": "object",
            "properties": {
                "close_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                }
            }
        },
        "PUser": {
            "type": "object",
            "properties": {
                "consent": {
                    "type": "boolean"
                },
                "public_key": {
                    "type": "string"
                },
                "uin": {
                    "type": "string"
                }
            }
        },
        "Provider": {
            "type": "object",
            "properties": {
                "available_mechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "manual_test": {
                    "type": "boolean"
                },
                "provider_name": {
                    "type": "string"
                }
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TestTypeResultCountyStatus"
                    }
                },
                "test_type": {
                    "type": "string"
                },
                "test_type_id": {
                    "type": "string"
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "Symptom": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "SymptomGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "symptoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Symptom"
                    }
                }
            }
        },
        "SymptomRule": {
            "type": "object",
            "properties": {
                "gr1_count": {
                    "type": "integer"
                },
                "gr2_count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SymptomRuleItem"
                    }
                }
            }
        },
        "SymptomRuleItem": {
            "type": "object",
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "gr1": {
                    "type": "boolean"
                },
                "gr2": {
                    "type": "boolean"
                },
                "health_status": {
                    "type": "string"
                },
                "next_step": {
                    "type": "string"
                }
            }
        },
        "TestType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TestTypeResult"
                    }
                }
            }
        },
        "TestTypeResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TestTypeResultCountyStatus": {
            "type": "object",
            "properties": {
                "health_status": {
                    "type": "string"
                },
                "health_status_id": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "result_id": {
                    "type": "string"
                },
                "result_next_step": {
                    "type": "string"
                },
                "result_next_step_time_interval": {
                    "type": "integer"
                }
            }
        },
        "TraceExposure": {
            "type": "object",
            "properties": {
                "date_added": {
                    "type": "integer"
                },
                "expirestamp": {
                    "type": "integer"
                },
                "tek": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "UINBuildingAccess": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "uin": {
                    "type": "string"
                }
            }
        },
        "UINOverride": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "uin": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "consent": {
                    "type": "boolean"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "exposure_notification": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "re_post": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "addTraceReportRequest": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "tek",
                    "timestamp"
                ],
                "properties": {
                    "expirestamp": {
                        "type": "integer"
                    },
                    "tek": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "integer"
                    }
                }
            }
        },
        "createAccessRuleItemRequest": {
            "type": "object",
            "required": [
                "county_status_id",
                "value"
            ],
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "createAccessRuleRequest": {
            "type": "object",
            "required": [
                "county_id",
                "rules"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/createAccessRuleItemRequest"
                    }
                }
            }
        },
        "createActionRequest": {
            "type": "object",
            "required": [
                "encrypted_blob",
                "encrypted_key",
                "provider_id",
                "user_id"
            ],
            "properties": {
                "audit": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "createCTestRequest": {
            "type": "object",
            "required": [
                "encrypted_blob",
                "encrypted_key",
                "provider_id",
                "uin"
            ],
            "properties": {
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "uin": {
                    "type": "string"
                }
            }
        },
        "createCountyRequest": {
            "type": "object",
            "required": [
                "country",
                "name",
                "state_province"
            ],
            "properties": {
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state_province": {
                    "type": "string"
                }
            }
        },
        "createCountyStatusRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "createFAQQuestionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "createFAQRequest": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "question": {
                    "type": "object",
                    "$ref": "#/definitions/createFAQQuestionRequest"
                },
                "section": {
                    "type": "string"
                }
            }
        },
        "createGuidelineItemsRequest": {
            "type": "object",
            "required": [
                "description",
                "icon",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "createGuidelineRequest": {
            "type": "object",
            "required": [
                "items",
                "name"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/createGuidelineItemsRequest"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "createHistoryRequest": {
            "type": "object",
            "required": [
                "date",
                "encrypted_blob",
                "encrypted_key",
                "type"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_image_blob": {
                    "type": "string"
                },
                "encrypted_image_key": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "createLocationRequest": {
            "type": "object",
            "required": [
                "available_tests",
                "county_id",
                "latitude",
                "longitude",
                "name",
                "provider_id"
            ],
            "properties": {
                "address_1": {
                    "type": "string"
                },
                "address_2": {
                    "type": "string"
                },
                "available_tests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "county_id": {
                    "type": "string"
                },
                "days_of_operation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/locationOperationDayRequest"
                    }
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "wait_time_color": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "createNewsRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "htmlContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "createOrUpdateStatusRequest": {
            "type": "object",
            "required": [
                "encrypted_blob",
                "encrypted_key"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                }
            }
        },
        "createProviderRequest": {
            "type": "object",
            "required": [
                "manual_test",
                "provider_name"
            ],
            "properties": {
                "available_mechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manual_test": {
                    "type": "boolean"
                },
                "provider_name": {
                    "type": "string"
                }
            }
        },
        "createResourceRequest": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "createRuleRequest": {
            "type": "object",
            "required": [
                "county_id",
                "results_statuses",
                "test_type_id"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "results_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/createRuleResultsStatusesTypeRequest"
                    }
                },
                "test_type_id": {
                    "type": "string"
                }
            }
        },
        "createRuleResultsStatusesTypeRequest": {
            "type": "object",
            "required": [
                "county_status_id",
                "test_type_result_id"
            ],
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "test_type_result_id": {
                    "type": "string"
                }
            }
        },
        "createSymptomRequest": {
            "type": "object",
            "required": [
                "name",
                "symptom_group"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "symptom_group": {
                    "type": "string"
                }
            }
        },
        "createSymptomRuleItemRequest": {
            "type": "object",
            "required": [
                "county_status_id",
                "gr1",
                "gr2",
                "next_step"
            ],
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "gr1": {
                    "type": "boolean"
                },
                "gr2": {
                    "type": "boolean"
                },
                "next_step": {
                    "type": "string"
                }
            }
        },
        "createSymptomRuleRequest": {
            "type": "object",
            "required": [
                "county_id",
                "gr1_count",
                "gr2_count",
                "items"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "gr1_count": {
                    "type": "integer"
                },
                "gr2_count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/createSymptomRuleItemRequest"
                    }
                }
            }
        },
        "createTestTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "createTestTypeResultRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "test_type_id": {
                    "type": "string"
                }
            }
        },
        "createUINOverrideRequest": {
            "type": "object",
            "required": [
                "interval",
                "uin"
            ],
            "properties": {
                "audit": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                },
                "uin": {
                    "type": "string"
                }
            }
        },
        "gubonResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "ilbuResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/ilbuResponseItem"
                }
            }
        },
        "ilbuResponseItem": {
            "type": "object",
            "properties": {
                "date_created": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                }
            }
        },
        "locationOperationDayRequest": {
            "type": "object",
            "properties": {
                "close_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_time": {
                    "type": "string"
                }
            }
        },
        "loginUserRequest": {
            "type": "object",
            "required": [
                "consent",
                "exposure_notification",
                "public_key",
                "uuid"
            ],
            "properties": {
                "consent": {
                    "type": "boolean"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "exposure_notification": {
                    "type": "boolean"
                },
                "public_key": {
                    "type": "string"
                },
                "re_post": {
                    "type": "boolean"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "processManualTestRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "setBuildingAccessRequest": {
            "type": "object",
            "required": [
                "access",
                "date"
            ],
            "properties": {
                "access": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "updateAccessRuleItemRequest": {
            "type": "object",
            "required": [
                "county_status_id",
                "value"
            ],
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "updateAccessRuleRequest": {
            "type": "object",
            "required": [
                "county_id",
                "rules"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/updateAccessRuleItemRequest"
                    }
                }
            }
        },
        "updateCRulesRequest": {
            "type": "object",
            "required": [
                "app_version",
                "county_id",
                "data"
            ],
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "county_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        },
        "updateCTestRequest": {
            "type": "object",
            "required": [
                "processed"
            ],
            "properties": {
                "processed": {
                    "type": "boolean"
                }
            }
        },
        "updateCountyRequest": {
            "type": "object",
            "required": [
                "country",
                "name",
                "state_province"
            ],
            "properties": {
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state_province": {
                    "type": "string"
                }
            }
        },
        "updateCountyStatusRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "updateDisplayOrderResourceRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "updateFAQRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "updateFAQSection": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "updateGuidelineItemsRequest": {
            "type": "object",
            "required": [
                "description",
                "icon",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "updateGuidelineRequest": {
            "type": "object",
            "required": [
                "items",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/updateGuidelineItemsRequest"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "updateHistoryRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "encrypted_blob": {
                    "type": "string"
                },
                "encrypted_key": {
                    "type": "string"
                }
            }
        },
        "updateLocationRequest": {
            "type": "object",
            "required": [
                "available_tests",
                "latitude",
                "longitude",
                "name"
            ],
            "properties": {
                "address_1": {
                    "type": "string"
                },
                "address_2": {
                    "type": "string"
                },
                "available_tests": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "days_of_operation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/locationOperationDayRequest"
                    }
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "wait_time_color": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "updateNewsRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "htmlContent": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "updateProviderRequest": {
            "type": "object",
            "required": [
                "manual_test",
                "provider_name"
            ],
            "properties": {
                "available_mechanisms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manual_test": {
                    "type": "boolean"
                },
                "provider_name": {
                    "type": "string"
                }
            }
        },
        "updateResourceRequest": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "updateRuleRequest": {
            "type": "object",
            "required": [
                "results_statuses"
            ],
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "results_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/createRuleResultsStatusesTypeRequest"
                    }
                }
            }
        },
        "updateSymptomRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "updateSymptomRuleItemRequest": {
            "type": "object",
            "required": [
                "county_status_id",
                "gr1",
                "gr2",
                "next_step"
            ],
            "properties": {
                "county_status_id": {
                    "type": "string"
                },
                "gr1": {
                    "type": "boolean"
                },
                "gr2": {
                    "type": "boolean"
                },
                "next_step": {
                    "type": "string"
                }
            }
        },
        "updateSymptomRuleRequest": {
            "type": "object",
            "required": [
                "county_id",
                "gr1_count",
                "gr2_count",
                "items"
            ],
            "properties": {
                "county_id": {
                    "type": "string"
                },
                "gr1_count": {
                    "type": "integer"
                },
                "gr2_count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/updateSymptomRuleItemRequest"
                    }
                }
            }
        },
        "updateSymptomsRequest": {
            "type": "object",
            "required": [
                "app_version",
                "items"
            ],
            "properties": {
                "app_version": {
                    "type": "string"
                },
                "items": {
                    "type": "string"
                }
            }
        },
        "updateTestTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                }
            }
        },
        "updateTestTypeResultRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "updateUINOverrideRequest": {
            "type": "object",
            "required": [
                "interval"
            ],
            "properties": {
                "audit": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "interval": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "AdminGroupAuth": {
            "type": "apiKey",
            "name": "GROUP",
            "in": "header"
        },
        "AdminUserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add Bearer prefix to the Authorization value)"
        },
        "AppUserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add Bearer prefix to the Authorization value)"
        },
        "ProvidersAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-HS-API-KEY",
            "in": "header"
        },
        "RokwireAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-API-KEY",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.19.0",
	Host:        "localhost",
	BasePath:    "/health",
	Schemes:     []string{"https"},
	Title:       "Rokwire Health Building Block API",
	Description: "Rokwire Health Building Block API Documentation.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
